{"ast":null,"code":"import { base_url } from \"../../constants\";\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const signup = user => {\n  return async dispatch => {\n    try {\n      const response = await fetch(\"\".concat(base_url, \"/user/signup\"), {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accepts': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          password: user.password\n        })\n      });\n      const jsonResponse = await response.json();\n      return jsonResponse;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const authenticate = (email, password) => {\n  return async dispatch => {\n    const response = await fetch(\"\".concat(base_url, \"/user/login\"), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accepts': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n    const jsonResponse = await response.json();\n\n    if (response.status === 200) {\n      window.localStorage.setItem('auth', JSON.stringify(response.message));\n      dispatch({\n        type: AUTHENTICATE_USER,\n        auth: jsonResponse.message\n      });\n    }\n\n    return jsonResponse.message;\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    const authData = window.localStorage.getItem('auth');\n\n    if (authData) {\n      window.localStorage.clear();\n      dispatch({\n        type: LOGOUT_USER,\n        payload: ''\n      });\n      return Promise.resolve(true);\n    }\n\n    return Promise.resolve(false);\n  };\n};\nexport const getToken = () => {\n  return dispatch => {\n    const authData = window.localStorage.getItem('auth');\n\n    if (authData) {\n      const auth = JSON.parse(authData);\n\n      if (auth.hasOwnProperty('token') && auth.token != '') {\n        dispatch({\n          type: AUTHENTICATE_USER,\n          auth: auth\n        });\n        return Promise.resolve(true);\n      }\n    }\n\n    return Promise.resolve(false);\n  };\n};","map":{"version":3,"sources":["/Users/Amina/Desktop/FoodApp/foodstore-front-end/src/store/actions/authActions.js"],"names":["base_url","AUTHENTICATE_USER","LOGOUT_USER","signup","user","dispatch","response","fetch","headers","method","body","JSON","stringify","firstName","lastName","email","password","jsonResponse","json","error","console","log","authenticate","status","window","localStorage","setItem","message","type","auth","logout","authData","getItem","clear","payload","Promise","resolve","getToken","parse","hasOwnProperty","token"],"mappings":"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","sourcesContent":["import { base_url } from \"../../constants\";\n\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const signup = (user) => {\n    return async dispatch => {\n        try{\n           const response = await fetch(`${base_url}/user/signup`, {\n               headers: {\n                   'Content-Type': 'application/json',\n                   'Accepts': 'application/json'\n               },\n               method: 'POST',\n               body: JSON.stringify({\n                   firstName: user.firstName,\n                   lastName: user.lastName,\n                   email: user.email,\n                   password: user.password\n               })\n           });\n           const jsonResponse = await response.json();\n           return jsonResponse;\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const authenticate = (email, password) => {\n    return async dispatch => {\n        const response = await fetch(`${base_url}/user/login`, {\n            headers: {\n                'Content-Type' : 'application/json',\n                'Accepts': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                email: email,\n                password: password\n            })\n        });\n\n        const jsonResponse = await response.json();\n        if(response.status === 200){\n\n            window.localStorage.setItem('auth', JSON.stringify(response.message));\n\n            dispatch({\n                type: AUTHENTICATE_USER,\n                auth: jsonResponse.message\n            });\n        }\n\n        return jsonResponse.message;\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        const authData = window.localStorage.getItem('auth');\n        if(authData){\n            window.localStorage.clear();\n            dispatch({\n                type: LOGOUT_USER,\n                payload: ''\n            });\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(false);\n    }\n}\n\nexport const getToken = () => {\n    return dispatch => {\n        const authData = window.localStorage.getItem('auth');\n\n        if(authData){\n            const auth = JSON.parse(authData);\n            if(auth.hasOwnProperty('token') && auth.token != ''){\n                dispatch({\n                    type: AUTHENTICATE_USER,\n                    auth: auth\n                });\n\n                return Promise.resolve(true);\n\n            }\n        }\n        \n        return Promise.resolve(false);\n        \n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}