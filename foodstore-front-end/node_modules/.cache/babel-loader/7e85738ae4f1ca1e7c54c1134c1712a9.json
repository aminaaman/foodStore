{"ast":null,"code":"var _jsxFileName = \"/Users/Amina/Desktop/FoodApp/mystore-front-end/src/components/Header/Header.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport TopHeader from './TopHeader/TopHeader';\nimport MainHeader from './MainHeader/MainHeader';\nimport BottomHeader from './BottomHeader/BottomHeader';\nimport * as authActions from '../../store/actions/authActions';\nimport * as cartActions from '../../store/actions/cartActions';\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.logout = () => {\n      this.props.logout();\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.getToken().then(result => {\n        if (result) {\n          this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n    const cart = this.props.cart;\n    const cartCount = isAuthenticated ? cart.cartCount : '';\n    return React.createElement(\"header\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(TopHeader, {\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(MainHeader, {\n      cartCount: cartCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(BottomHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getToken: () => dispatch(authActions.getToken()),\n    getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\n    logout: () => dispatch(authActions.logout())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/Amina/Desktop/FoodApp/mystore-front-end/src/components/Header/Header.js"],"names":["React","Component","TopHeader","MainHeader","BottomHeader","authActions","cartActions","connect","Header","logout","props","componentDidMount","auth","isAuthenticated","getToken","then","result","getCartItems","token","user","userId","catch","error","console","log","render","cart","cartCount","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAkB3BQ,MAlB2B,GAkBlB,MAAM;AACX,WAAKC,KAAL,CAAWD,MAAX;AACH,KApB0B;AAAA;;AAE3BE,EAAAA,iBAAiB,GAAG;AAChB,QAAG,CAAC,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,eAApB,EAAoC;AAChC,WAAKH,KAAL,CAAWI,QAAX,GACCC,IADD,CACMC,MAAM,IAAI;AAEZ,YAAGA,MAAH,EAAU;AACN,eAAKN,KAAL,CAAWO,YAAX,CAAwB,KAAKP,KAAL,CAAWE,IAAX,CAAgBM,KAAxC,EAA+C,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,IAAhB,CAAqBC,MAApE;AACH;AAEJ,OAPD,EAQCC,KARD,CAQOC,KAAK,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVD;AAWH;AACJ;;AAMDG,EAAAA,MAAM,GAAG;AAAA,UACEZ,eADF,GACqB,KAAKH,KAAL,CAAWE,IADhC,CACEC,eADF;AAAA,UAEEa,IAFF,GAEU,KAAKhB,KAFf,CAEEgB,IAFF;AAGL,UAAMC,SAAS,GAAGd,eAAe,GAAGa,IAAI,CAACC,SAAR,GAAoB,EAArD;AAEA,WACI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKlB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEkB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAlC0B;;AAsC/B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHjB,IAAAA,IAAI,EAAEiB,KAAK,CAACjB,IADT;AAEHc,IAAAA,IAAI,EAAEG,KAAK,CAACH;AAFT,GAAP;AAIH,CALD;;AAOA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHjB,IAAAA,QAAQ,EAAE,MAAMiB,QAAQ,CAAC1B,WAAW,CAACS,QAAZ,EAAD,CADrB;AAEHG,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQE,MAAR,KAAmBW,QAAQ,CAACzB,WAAW,CAACW,YAAZ,CAAyBC,KAAzB,EAAgCE,MAAhC,CAAD,CAFtC;AAGHX,IAAAA,MAAM,EAAE,MAAMsB,QAAQ,CAAC1B,WAAW,CAACI,MAAZ,EAAD;AAHnB,GAAP;AAKH,CAND;;AAQA,eAAeF,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\nimport TopHeader from './TopHeader/TopHeader';\nimport MainHeader from './MainHeader/MainHeader';\nimport BottomHeader from './BottomHeader/BottomHeader';\nimport * as authActions from '../../store/actions/authActions';\nimport * as cartActions from '../../store/actions/cartActions';\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n\n    componentDidMount() {\n        if(!this.props.auth.isAuthenticated){\n            this.props.getToken()\n            .then(result => {\n\n                if(result){\n                    this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId)\n                }\n\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        }\n    }\n\n    logout = () => {\n        this.props.logout();\n    }\n\n    render() {\n        const {isAuthenticated} = this.props.auth;\n        const {cart} = this.props;\n        const cartCount = isAuthenticated ? cart.cartCount : '';\n\n        return (\n            <header className=\"Header\">\n                <TopHeader logout={this.logout} />\n                <MainHeader cartCount={cartCount} />\n                <BottomHeader />\n            </header>\n        );\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        cart: state.cart\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getToken: () => dispatch(authActions.getToken()),\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\n        logout: () => dispatch(authActions.logout())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);"]},"metadata":{},"sourceType":"module"}