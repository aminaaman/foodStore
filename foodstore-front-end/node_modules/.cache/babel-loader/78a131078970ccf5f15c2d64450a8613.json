{"ast":null,"code":"var _jsxFileName = \"/Users/Amina/Desktop/FoodApp/mystore-front-end/src/containers/Login/index.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './style.css';\nimport Logo from '../../components/Logo';\nimport MobileTypeInput from '../../components/UI/MobileTypeInput';\nimport SubmitGradientButton from '../../components/UI/SubmitGradientButton';\nimport * as authActions from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport Error from '../../components/Error';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirectToReferrer: false,\n      email: '',\n      password: '',\n      isError: false,\n      errorMessage: ''\n    };\n\n    this.textHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.setError = (error, message) => {\n      this.setState({\n        error: error,\n        errorMessage: message\n      });\n    };\n\n    this.loginHandler = e => {\n      e.preventDefault();\n\n      if (this.state.email === '') {\n        this.setError(true, 'Enter Email');\n        return;\n      }\n\n      const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\n\n      if (!emailPattern.test(this.state.email)) {\n        this.setError(true, 'Invalid Email Address');\n        return;\n      }\n\n      if (this.state.password === '') {\n        this.setError(true, 'Enter Password');\n        return;\n      }\n\n      this.props.authenticate(this.state.email, this.state.password).then(response => {\n        console.log(response);\n\n        if (response.hasOwnProperty('token')) {\n          window.localStorage.setItem('auth', JSON.stringify(response));\n          this.setState({\n            redirectToReferrer: true\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.getToken().then(result => {\n        // result will be either true or false\n        if (result) {\n          this.setState({\n            redirectToReferrer: true\n          });\n        }\n      }).catch(er => {\n        console.log(er);\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"LoginContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"WelcomeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Login\")), React.createElement(Logo, {\n      style: {\n        margin: '0 auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"LoginWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.loginHandler,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(MobileTypeInput, {\n      type: \"text\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      textHandler: this.textHandler,\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(MobileTypeInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      textHandler: this.textHandler,\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.errorMessage), React.createElement(SubmitGradientButton, {\n      label: \"Login\",\n      style: {\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Create a new account\"), React.createElement(Link, {\n      to: \"/forget-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Forgot Password ?\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: (email, password) => dispatch(authActions.authenticate(email, password)),\n    getToken: () => dispatch(authActions.getToken())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/Amina/Desktop/FoodApp/mystore-front-end/src/containers/Login/index.js"],"names":["React","Component","Link","Redirect","Logo","MobileTypeInput","SubmitGradientButton","authActions","connect","Error","Login","state","redirectToReferrer","email","password","isError","errorMessage","textHandler","e","setState","target","name","value","setError","error","message","loginHandler","preventDefault","emailPattern","RegExp","test","props","authenticate","then","response","console","log","hasOwnProperty","window","localStorage","setItem","JSON","stringify","catch","componentDidMount","auth","isAuthenticated","getToken","result","er","render","margin","marginTop","display","justifyContent","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './style.css';\nimport Logo from '../../components/Logo';\n\nimport MobileTypeInput from '../../components/UI/MobileTypeInput';\nimport SubmitGradientButton from '../../components/UI/SubmitGradientButton';\n\nimport * as authActions from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport Error from '../../components/Error';\n\n\nclass Login extends Component {\n\n    state = {\n        redirectToReferrer: false,\n        email: '',\n        password: '',\n        isError: false,\n        errorMessage: ''\n    }\n\n    textHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    setError = (error, message) => {\n        this.setState({\n            error: error,\n            errorMessage: message\n        })\n    }\n\n    loginHandler = (e) => {\n        e.preventDefault();\n\n        if(this.state.email === ''){\n            this.setError(true, 'Enter Email'); return;\n        }\n\n        const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\n        if(!emailPattern.test(this.state.email)){\n            this.setError(true, 'Invalid Email Address'); return;\n        }\n\n        if(this.state.password === ''){\n            this.setError(true, 'Enter Password'); return;\n        }\n\n        this.props.authenticate(this.state.email, this.state.password)\n        .then(response => {\n            console.log(response);\n            if(response.hasOwnProperty('token')){\n                window.localStorage.setItem('auth', JSON.stringify(response))\n                this.setState({\n                    redirectToReferrer: true\n                });\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    componentDidMount() {\n        if(!this.props.auth.isAuthenticated){\n            this.props.getToken()\n            .then(result => {\n                // result will be either true or false\n                if(result){\n                    this.setState({\n                        redirectToReferrer: true\n                    });\n                }\n                \n            })\n            .catch(er => {\n                console.log(er);\n            });\n        }\n    }\n\n\n    render() {\n\n        if(this.state.redirectToReferrer){\n            return <Redirect to=\"/\" />\n        }\n\n        \n\n        return (\n            <div className=\"LoginContainer\">\n                <div className=\"WelcomeText\">\n                    <h3>Login</h3>\n                </div>\n                <Logo style={{margin: '0 auto'}} />\n                <div className=\"LoginWrapper\">\n                    <p></p>\n                    <form onSubmit={this.loginHandler} autoComplete=\"off\">\n\n                        <MobileTypeInput \n                            type=\"text\"\n                            placeholder=\"Email\"\n                            value={this.state.email}\n                            textHandler={this.textHandler}\n                            name=\"email\"\n                        />\n                        <MobileTypeInput \n                            type=\"password\"\n                            placeholder=\"Password\"\n                            value={this.state.password}\n                            textHandler={this.textHandler}\n                            name=\"password\"\n                        />\n\n                        <Error>\n                            {this.state.errorMessage}\n                        </Error>\n                        \n                        <SubmitGradientButton \n                            label=\"Login\"\n                            style={{marginTop: '30px'}}\n                        />\n                    </form>\n\n                    \n\n                </div>\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                    <Link to=\"/signup\">Create a new account</Link>\n                    <Link to=\"/forget-password\">Forgot Password ?</Link>\n                </div>\n                \n                \n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authenticate: (email, password) => dispatch(authActions.authenticate(email, password)),\n        getToken: () => dispatch(authActions.getToken())\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}